// Code generated by protoc-gen-go. DO NOT EDIT.
// source: country.proto

package grpc_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_43a73f5bdb29770c, []int{0}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type CountryListResp struct {
	Data                 []*CountryListResp_One `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CountryListResp) Reset()         { *m = CountryListResp{} }
func (m *CountryListResp) String() string { return proto.CompactTextString(m) }
func (*CountryListResp) ProtoMessage()    {}
func (*CountryListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_43a73f5bdb29770c, []int{1}
}

func (m *CountryListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryListResp.Unmarshal(m, b)
}
func (m *CountryListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryListResp.Marshal(b, m, deterministic)
}
func (m *CountryListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryListResp.Merge(m, src)
}
func (m *CountryListResp) XXX_Size() int {
	return xxx_messageInfo_CountryListResp.Size(m)
}
func (m *CountryListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryListResp.DiscardUnknown(m)
}

var xxx_messageInfo_CountryListResp proto.InternalMessageInfo

func (m *CountryListResp) GetData() []*CountryListResp_One {
	if m != nil {
		return m.Data
	}
	return nil
}

type CountryListResp_One struct {
	CnName               string   `protobuf:"bytes,1,opt,name=cn_name,json=cnName,proto3" json:"cn_name,omitempty"`
	EnName               string   `protobuf:"bytes,2,opt,name=en_name,json=enName,proto3" json:"en_name,omitempty"`
	EnFullName           string   `protobuf:"bytes,3,opt,name=en_full_name,json=enFullName,proto3" json:"en_full_name,omitempty"`
	EnCode2              string   `protobuf:"bytes,4,opt,name=en_code2,json=enCode2,proto3" json:"en_code2,omitempty"`
	EnCode3              string   `protobuf:"bytes,5,opt,name=en_code3,json=enCode3,proto3" json:"en_code3,omitempty"`
	NumCode              string   `protobuf:"bytes,6,opt,name=num_code,json=numCode,proto3" json:"num_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountryListResp_One) Reset()         { *m = CountryListResp_One{} }
func (m *CountryListResp_One) String() string { return proto.CompactTextString(m) }
func (*CountryListResp_One) ProtoMessage()    {}
func (*CountryListResp_One) Descriptor() ([]byte, []int) {
	return fileDescriptor_43a73f5bdb29770c, []int{1, 0}
}

func (m *CountryListResp_One) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountryListResp_One.Unmarshal(m, b)
}
func (m *CountryListResp_One) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountryListResp_One.Marshal(b, m, deterministic)
}
func (m *CountryListResp_One) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountryListResp_One.Merge(m, src)
}
func (m *CountryListResp_One) XXX_Size() int {
	return xxx_messageInfo_CountryListResp_One.Size(m)
}
func (m *CountryListResp_One) XXX_DiscardUnknown() {
	xxx_messageInfo_CountryListResp_One.DiscardUnknown(m)
}

var xxx_messageInfo_CountryListResp_One proto.InternalMessageInfo

func (m *CountryListResp_One) GetCnName() string {
	if m != nil {
		return m.CnName
	}
	return ""
}

func (m *CountryListResp_One) GetEnName() string {
	if m != nil {
		return m.EnName
	}
	return ""
}

func (m *CountryListResp_One) GetEnFullName() string {
	if m != nil {
		return m.EnFullName
	}
	return ""
}

func (m *CountryListResp_One) GetEnCode2() string {
	if m != nil {
		return m.EnCode2
	}
	return ""
}

func (m *CountryListResp_One) GetEnCode3() string {
	if m != nil {
		return m.EnCode3
	}
	return ""
}

func (m *CountryListResp_One) GetNumCode() string {
	if m != nil {
		return m.NumCode
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "grpc_pb.EmptyRequest")
	proto.RegisterType((*CountryListResp)(nil), "grpc_pb.CountryListResp")
	proto.RegisterType((*CountryListResp_One)(nil), "grpc_pb.CountryListResp.One")
}

func init() { proto.RegisterFile("country.proto", fileDescriptor_43a73f5bdb29770c) }

var fileDescriptor_43a73f5bdb29770c = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd0, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x06, 0x60, 0xd6, 0xc4, 0x44, 0xc7, 0xaa, 0xb0, 0x20, 0xae, 0xc5, 0x43, 0xe8, 0xa9, 0xa7,
	0x20, 0xcd, 0xc1, 0xbb, 0x45, 0x4f, 0x62, 0x21, 0x2f, 0x10, 0xd2, 0xed, 0x28, 0x42, 0x76, 0xb2,
	0x26, 0xbb, 0x87, 0xbc, 0x92, 0x4f, 0xe7, 0x23, 0x48, 0x66, 0x83, 0x04, 0xa1, 0xc7, 0xe1, 0xfb,
	0xe7, 0xf0, 0xff, 0x70, 0xa9, 0x5b, 0x4f, 0xae, 0x1b, 0x72, 0xdb, 0xb5, 0xae, 0x95, 0xe9, 0x47,
	0x67, 0x75, 0x65, 0xf7, 0xab, 0x2b, 0x58, 0x3c, 0x1b, 0xeb, 0x86, 0x12, 0xbf, 0x3c, 0xf6, 0x6e,
	0xf5, 0x23, 0xe0, 0x7a, 0x1b, 0xa2, 0xaf, 0x9f, 0xbd, 0x2b, 0xb1, 0xb7, 0xf2, 0x01, 0xe2, 0x43,
	0xed, 0x6a, 0x25, 0xb2, 0x68, 0x7d, 0xb1, 0xb9, 0xcf, 0xa7, 0xdf, 0xfc, 0x5f, 0x2e, 0xdf, 0x11,
	0x96, 0x9c, 0x5c, 0x7e, 0x0b, 0x88, 0x76, 0x84, 0xf2, 0x16, 0x52, 0x4d, 0x15, 0xd5, 0x06, 0x95,
	0xc8, 0xc4, 0xfa, 0xbc, 0x4c, 0x34, 0xbd, 0xd5, 0x86, 0x01, 0x27, 0x38, 0x09, 0x80, 0x01, 0x32,
	0x58, 0x20, 0x55, 0xef, 0xbe, 0x69, 0x82, 0x46, 0xac, 0x80, 0xf4, 0xe2, 0x9b, 0x86, 0x13, 0x77,
	0x70, 0x86, 0x54, 0xe9, 0xf6, 0x80, 0x1b, 0x15, 0xb3, 0xa6, 0x48, 0xdb, 0xf1, 0x9c, 0x51, 0xa1,
	0x4e, 0xe7, 0x54, 0x8c, 0x44, 0xde, 0xb0, 0xa9, 0x24, 0x10, 0x79, 0xc3, 0x6f, 0x4f, 0x90, 0x4e,
	0x4d, 0xe4, 0x23, 0xc4, 0x63, 0x1b, 0x79, 0xf3, 0xd7, 0x71, 0x3e, 0xce, 0x52, 0x1d, 0xab, 0xbe,
	0x4f, 0x78, 0xd6, 0xe2, 0x37, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x6b, 0x7a, 0x72, 0x67, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CountryClient is the client API for Country service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CountryClient interface {
	List(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*CountryListResp, error)
}

type countryClient struct {
	cc *grpc.ClientConn
}

func NewCountryClient(cc *grpc.ClientConn) CountryClient {
	return &countryClient{cc}
}

func (c *countryClient) List(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*CountryListResp, error) {
	out := new(CountryListResp)
	err := c.cc.Invoke(ctx, "/grpc_pb.Country/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CountryServer is the server API for Country service.
type CountryServer interface {
	List(context.Context, *EmptyRequest) (*CountryListResp, error)
}

// UnimplementedCountryServer can be embedded to have forward compatible implementations.
type UnimplementedCountryServer struct {
}

func (*UnimplementedCountryServer) List(ctx context.Context, req *EmptyRequest) (*CountryListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterCountryServer(s *grpc.Server, srv CountryServer) {
	s.RegisterService(&_Country_serviceDesc, srv)
}

func _Country_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CountryServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc_pb.Country/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CountryServer).List(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Country_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_pb.Country",
	HandlerType: (*CountryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Country_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "country.proto",
}
